PostgreSQL Veri TÃ¼rleri Nelerdir?
DiÄŸer veri tabanlarÄ±na gÃ¶re postgresql farklÄ± tÃ¼rlere sahiptir. Ben en azÄ±ndan MySQL, MSSQL ve NoSQL tarafÄ±nda MongoDB ile Ã§alÄ±ÅŸtÄ±m, Oracle tarafÄ±nda Ã§alÄ±ÅŸmadÄ±ÄŸÄ±m iÃ§in bÃ¶yle sÃ¶ylÃ¼yorum. Belki postgresql ile aynÄ± tÃ¼rlere sahip databaseler de mevcuttur. Ä°sterseniz Ã§ok da uzatmadan nelere sahibiz ona bir bakalÄ±m.

Boolean
Bu veri tÃ¼rÃ¼mÃ¼z anlaÅŸÄ±ldÄ±ÄŸÄ± Ã¼zere true ya da false iÅŸlemlerinde kullanÄ±lÄ±yor. Ancak yes, no, t ve f gibi kullanÄ±mlarÄ± da kabul ediyor. Bu kullanÄ±ma basit bir Ã¶rnek vermek gerekiyor ancak yazÄ± gereksiz uzayacaÄŸÄ± iÃ§in Ã¶zel bir baÅŸlÄ±kta bunu belirteceÄŸim. Burada biraz insan diline kayma da yaÅŸanmÄ±ÅŸ oluyor. Ã–rneÄŸin;


SELECT * FROM dogruluk WHERE dogrumu = 'yes';
Karakter TÃ¼rleri
Bu tÃ¼rler diÄŸer veri tabanlarÄ±ndan da bildiÄŸiniz gibi metinsel ifadeleri saklayabilen tÃ¼rler. Tabi kendi aralarÄ±nda limitlere sahip olabildikleri gibi herhangi bir limite sahip olmayanlarÄ± da bulunmakta. Bu tÃ¼rler

char(n)
varchar(n)
text
ÅŸeklinde aÃ§Ä±klanabilirler. YukarÄ±dan anladÄ±ÄŸÄ±nÄ±z gibi char ve varchar n adet karakter alabilirken text bir limite sahip deÄŸil. Bu konuya daha detaylÄ± olarak konu baÅŸlÄ±ÄŸÄ±nÄ± iÃ§eren yazÄ±da deÄŸineceÄŸim. MSSQL Ã¼zerinde yer alan nvarchar merak ediliyor ise eÄŸer varchar burada o iÅŸi gÃ¶rÃ¼yor ayrÄ±ca text tÃ¼rÃ¼ de. Detaylar parmaktan sonra ğŸ˜›

SayÄ±sal TÃ¼rler
SayÄ±sal tÃ¼rlerde bazÄ± sÃ¼rprizler bizi bekliyor olsa da Ã§oÄŸunlukla bize yabancÄ± gelmeyen tiplerle karÅŸÄ± karÅŸÄ±yayÄ±z. Burada belki en ilginÃ§ gelecek olan ÅŸey auto increment iÅŸlemlerini halledebileceÄŸiniz farklÄ± tÃ¼rlerin olmasÄ±. Birisi aÃ§Ä±kcasÄ± ben ilkel bir tÃ¼rÃ¼m diye baÄŸÄ±rÄ±yorken diÄŸeri tam da bu iÅŸi yapmak adÄ±na var. VereceÄŸim tÃ¼rlerin range aralÄ±klarÄ±nÄ± belirtmeyeceÄŸim ancak byte boyutlarÄ±nÄ± belirteceÄŸim.

smallint â€“ 2 byte
integer â€“ 4 byte
bigint â€“ 8 byte
decimal ve numeric variable tÃ¼rÃ¼nden
real â€“ 4 byte
double precision â€“ 8 byte
smallserial â€“ 2 byte
serial â€“ 4 byte
bigserial â€“ 8 byte
Burada daha Ã¶nce gÃ¶rmedim ben dediÄŸiniz direkt gÃ¶ze Ã§arpanlar serial tÃ¼rler olabilir. Bu tipler auto increment iÅŸlemlerinde kullanÄ±labilir. BunlarÄ± kullanmam, ben int adamÄ±yÄ±m diyorsanÄ±z integer da kullanabilirsiniz. Ama extra bir next value olayÄ±nÄ± baÅŸtan kabul edeceksiniz.

GeÃ§ici TÃ¼rler
Bu tÃ¼rler direkt olarak kalÄ±cÄ±lÄ±ÄŸa sahip olmayan tÃ¼rlerdir. Bu tÃ¼rlere yabancÄ±lÄ±k Ã§ekmeyeceksiniz. Ã‡Ã¼nkÃ¼ birÃ§ok veri tabanÄ± yÃ¶netim sistemi bu tÃ¼rleri zaten kullanmakta. Bunlar bildiÄŸinizi varsayarak ÅŸunlardÄ±r;

date
time
timestamp
interval
UUID TÃ¼rler
Bir yazÄ±da hatÄ±rlarsanÄ±z eÄŸer GUID generatorden bahsetmiÅŸtim. Bu tÃ¼rde evrensel dÃ¼zeyde benzersiz tanÄ±mlayÄ±cÄ±larÄ±n olacaÄŸÄ± varsayÄ±lÄ±r. RFC4122 tÃ¼rÃ¼nden standartlara sahip bu kolona benzersiz deÄŸerlerin atanmasÄ± gerekmektedir. Gerek postgresql olsun gerekse diÄŸer vtys olsun tamamÄ±nda yer alan uzmanlar guid / uuid Ã¶neriyor. PostgreSQL uzmanlarÄ± da aynÄ± ÅŸekilde serial tÃ¼rÃ¼ne gÃ¶re bu tÃ¼rÃ¼n kullanÄ±mÄ±nÄ±n garanti benzersizlik sunacaÄŸÄ± gÃ¶rÃ¼ÅŸÃ¼ndeler.

Array TÃ¼rler
DiÄŸer veri tabanlarÄ±nda da bu veri tabanÄ±ndaki gibi uzman deÄŸilim. Ancak hiÃ§bir veri tabanÄ±nda bu tÃ¼rÃ¼ duymadÄ±m belki de iÅŸime yaramadÄ±ÄŸÄ± iÃ§in. PostgreSQL metinsel, sayÄ±sal vb. veri tÃ¼rleri iÃ§in dizi ÅŸeklinde veri tutmaya imkan tanÄ±yor.

Dizi kabul edilen kolona ekleme yapÄ±lÄ±rken ve select query Ã§ekilirken bildiÄŸimiz programlamada kullanÄ±lan yÃ¶ntem kullanÄ±lÄ±yor. AyrÄ±ca JSON syntax ile ekleme imkanÄ±na da sahip oluyorsunuz. Bunu gerÃ§ekten ilginÃ§ buldum. Bir kolonun sadece 1. indexini getir gibi bir ÅŸey var.

SELECT KullaniciAdi, Telefon[1] FROM kullanicilar
Tabi bunun avantajÄ±, joinlerle baÄŸladÄ±ÄŸÄ±nÄ±z telefon ve kullanÄ±cÄ± tablolarÄ±nÄ± belki ortadan kaldÄ±rabilir oluÅŸunuz.

JSON TÃ¼rler
Bu tÃ¼re artÄ±k pek yabancÄ± deÄŸiliz. Ã‡oÄŸu bÃ¼yÃ¼k firma olacak ÅŸekilde tÃ¼m ÅŸirketler RESTFul servislerinde artÄ±k JSON kullanÄ±yor. AynÄ± ÅŸekilde postgresql iÃ§in de json tÃ¼rÃ¼nde veri saklama imkanÄ± var. BirÃ§ok Ã¶nemli veri tabanÄ± yÃ¶netim sistemi de json veri dÃ¶ndÃ¼rÃ¼yor hatta bazÄ±larÄ± direkt veri tÃ¼rÃ¼ ÅŸeklinde desteÄŸe de sahip. PostgreSQL bu iÅŸi bir parÃ§a daha ileriye gÃ¶tÃ¼rÃ¼p tamamen programlamaya dÃ¶kmÃ¼ÅŸ durumda. Iterasyondan tutun da tipe kadar.

hstore TÃ¼rler
Bu tÃ¼rler garip bir ÅŸekilde JSON tÃ¼rÃ¼ ile benzer gÃ¶steriyor. Kafa karÄ±ÅŸtÄ±rÄ±cÄ± olabilirler. Ã‡Ã¼nkÃ¼ where olsun, column property mapper olsun tamamen benzer. Ancak bunlar key-value pair yani anahtar-deÄŸer tÃ¼rÃ¼nden Ã§alÄ±ÅŸÄ±rlar. Yine bu tÃ¼rlerde de enumeration iÅŸlemlerini gerÃ§ekleÅŸtirebilirsiniz.